{"ast":null,"code":"var _jsxFileName = \"/workspaces/Speech-To-Text/speech-to-text-app/src/components/SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport '../styles/SpeechToText.css'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const utteranceRef = useRef(null);\n  const {\n    transcript,\n    resetTranscript,\n    listening\n  } = useSpeechRecognition();\n  const timerRef = useRef(null);\n  useEffect(() => {\n    setText(transcript);\n    if (listening) {\n      clearTimeout(timerRef.current);\n      timerRef.current = setTimeout(() => {\n        handleSubmit(transcript);\n      }, 5000);\n    }\n  }, [transcript, listening]);\n  useEffect(() => {\n    setWords(text.trim().split(/\\s+/));\n  }, [text]);\n  const speakFromIndex = index => {\n    if (index >= words.length) return;\n    const utterance = new SpeechSynthesisUtterance(words.slice(index).join(' '));\n    utterance.onboundary = event => {\n      if (event.name === 'word') {\n        const spokenText = utterance.text.substring(0, event.charIndex);\n        const spokenWords = spokenText.trim().split(/\\s+/).length;\n        setCurrentWordIndex(index + spokenWords);\n      }\n    };\n    utterance.onend = () => {\n      setIsSpeaking(false);\n      setIsPaused(false);\n    };\n    utteranceRef.current = utterance;\n    speechSynthesis.speak(utterance);\n    setIsSpeaking(true);\n    setIsPaused(false);\n  };\n  console.log(\"words\", words);\n  console.log(\"currentWordIndex\", currentWordIndex);\n  const handlePlay = () => {\n    if (isPaused) {\n      speechSynthesis.resume();\n      setIsPaused(false);\n    } else {\n      speechSynthesis.cancel();\n      speakFromIndex(currentWordIndex);\n    }\n  };\n  const handlePause = () => {\n    speechSynthesis.pause();\n    setIsPaused(true);\n  };\n  const handleStop = () => {\n    speechSynthesis.cancel();\n    setIsSpeaking(false);\n    setIsPaused(false);\n    setCurrentWordIndex(0);\n  };\n  const handleForward = () => {\n    if (currentWordIndex < words.length - 1) {\n      speechSynthesis.cancel();\n      setCurrentWordIndex(prev => prev + 1);\n      speakFromIndex(currentWordIndex + 1);\n    }\n  };\n  const handleRewind = () => {\n    if (currentWordIndex > 0) {\n      speechSynthesis.cancel();\n      setCurrentWordIndex(prev => prev - 1);\n      speakFromIndex(currentWordIndex - 1);\n    }\n  };\n  const handleMicClick = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({\n        continuous: true\n      });\n    }\n  };\n  const handleStopClick = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n      resetTranscript();\n    }\n  };\n  const handleResetClick = () => {\n    setText('');\n    resetTranscript();\n    setCurrentWordIndex(0);\n  };\n  const handleInputChange = e => {\n    setText(e.target.value);\n    setCurrentWordIndex(0);\n  };\n  const handleSubmit = finalTranscript => {\n    console.log('Submitted successfully:', finalTranscript);\n    SpeechRecognition.stopListening();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-to-text\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"styled-input\",\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: index === currentWordIndex ? 'highlight' : '',\n        children: word + ' '\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mic-button\",\n        onClick: handleMicClick,\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stop-button\",\n        onClick: handleStopClick,\n        children: \"\\uD83D\\uDED1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: handleResetClick,\n        children: \"\\uD83D\\uDD04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: () => handleSubmit(text),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tts-button\",\n        onClick: handlePlay,\n        children: \"\\u25B6\\uFE0F Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tts-button\",\n        onClick: handlePause,\n        children: \"\\u23F8\\uFE0F Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tts-button\",\n        onClick: handleStop,\n        children: \"\\u23F9\\uFE0F Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tts-button\",\n        onClick: handleRewind,\n        children: \"\\u23EA Rewind\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tts-button\",\n        onClick: handleForward,\n        children: \"\\u23E9 Forward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"u5JuSXEbl+9gtGSjxCUnO2Pcq+o=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","SpeechToText","_s","text","setText","words","setWords","currentWordIndex","setCurrentWordIndex","isSpeaking","setIsSpeaking","isPaused","setIsPaused","utteranceRef","transcript","resetTranscript","listening","timerRef","clearTimeout","current","setTimeout","handleSubmit","trim","split","speakFromIndex","index","length","utterance","SpeechSynthesisUtterance","slice","join","onboundary","event","name","spokenText","substring","charIndex","spokenWords","onend","speechSynthesis","speak","console","log","handlePlay","resume","cancel","handlePause","pause","handleStop","handleForward","prev","handleRewind","handleMicClick","startListening","continuous","handleStopClick","stopListening","handleResetClick","handleInputChange","e","target","value","finalTranscript","className","children","map","word","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Speech-To-Text/speech-to-text-app/src/components/SpeechToText.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport '../styles/SpeechToText.css'; // Adjust the path as necessary\n\nconst SpeechToText = () => {\n  const [text, setText] = useState('');\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const utteranceRef = useRef(null);\n  const { transcript, resetTranscript, listening } = useSpeechRecognition();\n  const timerRef = useRef(null);\n\n  useEffect(() => {\n    setText(transcript);\n    if (listening) {\n      clearTimeout(timerRef.current);\n      timerRef.current = setTimeout(() => {\n        handleSubmit(transcript);\n      }, 5000);\n    }\n  }, [transcript, listening]);\n\n  useEffect(() => {\n    setWords(text.trim().split(/\\s+/));\n  }, [text]);\n\n  const speakFromIndex = (index) => {\n    if (index >= words.length) return;\n    const utterance = new SpeechSynthesisUtterance(words.slice(index).join(' '));\n    utterance.onboundary = (event) => {\n      if (event.name === 'word') {\n        const spokenText = utterance.text.substring(0, event.charIndex);\n        const spokenWords = spokenText.trim().split(/\\s+/).length;\n        setCurrentWordIndex(index + spokenWords);\n      }\n    };\n    utterance.onend = () => {\n      setIsSpeaking(false);\n      setIsPaused(false);\n    };\n    utteranceRef.current = utterance;\n    speechSynthesis.speak(utterance);\n    setIsSpeaking(true);\n    setIsPaused(false);\n  };\n\n  console.log(\"words\", words);\n  console.log(\"currentWordIndex\", currentWordIndex);\n\n  const handlePlay = () => {\n    if (isPaused) {\n      speechSynthesis.resume();\n      setIsPaused(false);\n    } else {\n      speechSynthesis.cancel();\n      speakFromIndex(currentWordIndex);\n    }\n  };\n\n  const handlePause = () => {\n    speechSynthesis.pause();\n    setIsPaused(true);\n  };\n\n  const handleStop = () => {\n    speechSynthesis.cancel();\n    setIsSpeaking(false);\n    setIsPaused(false);\n    setCurrentWordIndex(0);\n  };\n\n  const handleForward = () => {\n    if (currentWordIndex < words.length - 1) {\n      speechSynthesis.cancel();\n      setCurrentWordIndex((prev) => prev + 1);\n      speakFromIndex(currentWordIndex + 1);\n    }\n  };\n\n  const handleRewind = () => {\n    if (currentWordIndex > 0) {\n      speechSynthesis.cancel();\n      setCurrentWordIndex((prev) => prev - 1);\n      speakFromIndex(currentWordIndex - 1);\n    }\n  };\n\n  const handleMicClick = () => {\n    if (!listening) {\n      SpeechRecognition.startListening({ continuous: true });\n    }\n  };\n\n  const handleStopClick = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n      resetTranscript();\n    }\n  };\n\n  const handleResetClick = () => {\n    setText('');\n    resetTranscript();\n    setCurrentWordIndex(0);\n  };\n\n  const handleInputChange = (e) => {\n    setText(e.target.value);\n    setCurrentWordIndex(0);\n  };\n\n  const handleSubmit = (finalTranscript) => {\n    console.log('Submitted successfully:', finalTranscript);\n    SpeechRecognition.stopListening();\n  };\n\n  return (\n    <div className=\"speech-to-text\">\n      <div className=\"styled-input\">\n        {words.map((word, index) => (\n          <span\n            key={index}\n            className={index === currentWordIndex ? 'highlight' : ''}\n          >\n            {word + ' '}\n          </span>\n        ))}\n      </div>\n\n      <div className=\"button-container\">\n        <button className=\"mic-button\" onClick={handleMicClick}>🎤</button>\n        <button className=\"stop-button\" onClick={handleStopClick}>🛑</button>\n        <button className=\"reset-button\" onClick={handleResetClick}>🔄</button>\n        <button className=\"submit-button\" onClick={() => handleSubmit(text)}>Submit</button>\n      </div>\n\n      <div className=\"button-container\">\n        <button className=\"tts-button\" onClick={handlePlay}>▶️ Play</button>\n        <button className=\"tts-button\" onClick={handlePause}>⏸️ Pause</button>\n        <button className=\"tts-button\" onClick={handleStop}>⏹️ Stop</button>\n        <button className=\"tts-button\" onClick={handleRewind}>⏪ Rewind</button>\n        <button className=\"tts-button\" onClick={handleForward}>⏩ Forward</button>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeechToText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}